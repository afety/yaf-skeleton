;[program:xx]                        ;是被管理的进程配置参数，xx是进程的名称
;command=/opt/apache-tomcat-8.0.35/bin/catalina.sh run  ;程序启动命令;可以带参数,如：/home/test.py -a 'hehe'有一点需要注意的是，我们的command只能是那种在终端运行的进程，不能是守护进程。这个想想也知道了，比如说command=service httpd start。httpd这个进程被linux的service管理了，我们的supervisor再去启动这个命令，这已经不是严格意义的子进程了。
;directory=/tmp                ;进程运行前，会前切换到这个目录
;autostart=true              ;在supervisord启动的时候也自动启动
;startsecs=10                    ;启动10秒后没有异常退出，就表示进程正常启动了，默认为1秒。
;autorestart=true                ;程序退出后自动重启,可选值：[unexpected,true,false]，默认为unexpected，表示进程意外杀死后才重启
;这个是设置子进程挂掉后自动重启的情况，如果为false的时候，无论什么情况下，都不会被重新启动，如果为unexpected，只有当进程的退出码不在下面的exitcodes里面定义的退出码的时候，才会被自动重启。当为true的时候，只要子进程挂掉，将会被无条件的重启。
;exitcodes=0,2               ;注意和上面的的autorestart=unexpected对应。exitcodes里面的定义的退出码是expected的。
;stopsignal=QUIT             ;进程停止信号，可以为TERM, HUP, INT, QUIT, KILL, USR1, or USR2等信号。默认为TERM 。当用设定的信号去干掉进程，退出码会被认为是expected。
;stopwaitsecs=10             ;这个是当我们向子进程发送stopsignal信号后，到系统返回信息给supervisord，所等待的最大时间。 超过这个时间，supervisord会向该子进程发送一个强制kill的信号。 默认为10秒。
;startretries=3                  ;启动失败自动重试次数，默认是3。当超过3次后，supervisor将把此进程的状态置为FAIL
;user=tomcat                     ;用哪个用户启动进程，默认是root。如果supervisord是root启动，我们在这里设置这个非root用户，可以用来管理该program。
;priority=999                    ;进程启动优先级，默认999，值小的优先启动
;redirect_stderr=true ;把stderr重定向到stdout，默认false
;stdout_logfile_maxbytes=20MB ;stdout日志文件大小，默认50MB
;stdout_logfile_backups = 20  ;stdout日志文件备份数，默认是10
;stdout_logfile=/opt/apache-tomcat-8.0.35/logs/catalina.out ;进程的stdout的日志路径，可以指定路径，AUTO，none等三个选项。设置为none的话，将没有日志产生。设置为AUTO的话，将随机找一个地方生成日志文件，而且当supervisord重新启动的时候，以前的日志文件会被清空。当 ;redirect_stderr=true的时候，sterr也会写进这个日志文件。需要注意当指定目录不存在时无法正常启动，所以需要手动创建目录（supervisord 会自动创建日志文件）
;stopasgroup=false               ;默认为false,进程被杀死时，是否向这个进程组发送stop信号，包括子进程。主要用于，supervisord管理的子进程，这个子进程本身还有子进程。那么我们如果仅仅干掉supervisord的子进程的话，子进程的子进程有可能会变成孤儿进程。所以咱们可以设置可个选项，把整个该子进程的整个进程组都干掉。 设置为true的话，一般killasgroup也会被设置为true。需要注意的是，该选项发送的是stop。默认为false。
;killasgroup=false               ;信号默认为false，不过向进程组发送的是kill信号
;stderr_capture_maxbytes=1MB   ;这个一样，和stdout_capture一样。 默认为0，关闭状态
;stderr_events_enabled=false   ;这个也是一样，默认为false
;environment=A="1",B="2"       ;这个是该子进程的环境变量，和别的子进程是不共享的

; 通过修改supervisord.conf文件的include块 加载不同项目中的配置

[program:sendWechatMessage]
command = php cli/cli.php request_uri='/cli/MessageQ/wechatMessageWorker'
directory = /data/prod/ams   ; 项目的路径（run.py的上一级）
numprocs = 1
user = prod   ; 启动进程的用户
startretries = 3   ; 重试次数
autostart = 1
;autorestart=1  ; 自动重启
;loglevel=info   ; 日志等级
;stdout_logfile_maxbytes=10MB   ; 每个日志文件大小
;stdout_logfile_backups=10    ; 备份数
;stdout_logfile=/home/shylin/demo/logs/demo_supervisor.log  ; 日志存放位置